#!/bin/bash
# start mongod with or without user authentication automagically

# to streamline debug output
bashName="startMongod"
echo -e "\n[ ${bashName} ] CWD: ${PWD}"

# handle cli args using getopts functionality
while getopts ":C:D:I:N:P:U:cd:hilp:r:u:v:" opt; do
    case ${opt} in
        C) # mongod collection
            mongodColl=${OPTARG}
            ;;
        D) # mongod data directory
            mongodDir=${OPTARG}
            ;;
        I) # mongod Ip
            mongodIp=${OPTARG}
            ;;
        N) # mongo database name
            mongodName=${OPTARG}
            ;;
        P) # mongod Port
            mongodPort=${OPTARG}
            ;;
        U) # mongod url "mongodb://localhost:27017/"
            mongodUrl=${OPTARG}
            ;;
        c) # clean data #TODO implement cleaner
            toClean=true
            ;;
        d) # Directory path to csv data (topmost will search sub)
            dirCsv=${OPTARG}
            ;;
        h) # Directory path to csv data (topmost will search sub)
            displayHelp=true
            ;;
        i) # initialise mongod database {boolean}
            toInit=true
            ;;
        l) # autologin?
            toLogin=true
            ;;
        p) # password
            password=${OPTARG}
            ;;
        r) # role of user
            role=${OPTARG}
            ;;
        u) # username
            username=${OPTARG}
            ;;
        v) # verbose / debug but d was taken
            verbose=${OPTARG}
            ;;
        \?)
            echo "[ ${bashName} ] Invalid option: ${OPTARG}" 1>&2
            exit 1
            ;;
        :)
            echo "[ ${bashName} ] Invalid option: ${OPTARG} requires argument" 1>&2
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))

# if no argument set default using parameter expansion " :- "
mongodDir=${mongodDir:-"${HOME}/db/"}
mongodIp=${mongodIp:-"127.0.0.1"}
mongodPort=${mongodPort:-"27017"}
role=${role:-"dbOwner"}

# check if username is null to be created using parameter expansion '+' and 'x'
if [ ${username} ] && [ ${password} ]; then
    echo "[ ${bashName} ] creating user ${username} ${mongodName} ${role}"
    # start mongod in background process and create user
    mongod --bind_ip "${mongodIp}" --port "${mongodPort}" --dbpath "${mongodDir}" --quiet &
    sleep 1
    mongodPid=$!
    sleep 2 # making sure everything has time to update before connection
    python src/initUser.py -N "${mongodName}" -p "${password}" -r "${role}" -u "${username}"
    sleep 2 # giving database time to update before shutdown command
    kill -2 ${mongodPid} # 2 == sigint
else
    echo "[ ${bashName} ] [ warning ] no (-u and -p) so not creating user "
fi

# restart mongod
wait # wait for previous to shutdown
mongod --auth --dbpath "${mongodDir}" --quiet &
echo "    ( --- Mongod sent to background, PID: ${!} --- ${mongodName};  ${mongodIp}:${mongodPort} ${mongodDir})"
sleep 2 # give database some time to launch