#!/bin/bash
# if there are no cli arguments:
date
#dataFolder="scopeTest"
if [ $# -eq 0 ]; then
	# use defaults
	echo -e "[ dataWrangler ] No arguments, using defaults."
	dataFolder="../../DataSets/ml-20m/"
	isDebug=true
else
	echo -e "[ dataWrangler ] Arguments provided, setting."
	dataFolder=$1
fi

# creating/ ensuring directories exist
figDir="Fig/"
buildDir="cmake-build-debug"
mkdir -p $figDir
mkdir -p $buildDir
mkdir -p "${dataFolder}/Model/"
echo "[ dataWrangler ] Image directory: ${figDir}"
echo "[ dataWrangler ] CMake build dir: ${buildDir}"

# template + testing template
python ./Misc/template.py

# debug
python ./Misc/debug.py

# data preparation
echo "------ Data preparation ------"
python ./Misc/movieLenseWrangler.py $dataFolder
python ./Misc/movieLenseDataCombiner.py $dataFolder
# args:  <data directory relative path> <input.csv name> <ratio of train:test> <output test file name> <output train fn>
python ./Misc/monteCarlo.py $dataFolder "pML.csv" 0.2 "test.csv" "train.csv"

# visualisations
echo "------ Visualisations -------"
#python ./Misc/seabornScatter.py $dataFolder "test.csv" "rating" "timestamp" $figDir "rating-time-scatter-ml.png" &
#python ./Misc/seabornScatter.py $dataFolder "test.csv" "rating" "movieAvgRating" $figDir "rating-movieAvgRating-scatter-ml.png" &
#python ./Misc/seabornScatter.py $dataFolder "test.csv" "rating" "userAvgRating" $figDir "rating-userAvgRating-scatter-ml.png" &
#python ./Misc/seabornScatter.py $dataFolder "test.csv" "rating" "userAvgRating" $figDir "rating-userAvgRating-scatter-ml.png" &

# baseline learning algorithms
echo "------- Learning algorithms ------"
python ./Misc/svd.py $dataFolder "pML.csv" &
python ./Misc/mf.py $dataFolder "pML.csv" #&
python ./Misc/rnn.py $dataFolder "pML.csv" #&
python ./Misc/knn.py $dataFolder "test.csv" "train.csv" 0.2 &  # 0.7786580092802942 MEA - at first

#echo -e "[ mlpack_knn cpp ] Avante! Show that sh-ython whos boss."
#mlpack_knn -q ${dataFolder}test_noLabel.csv -r ${dataFolder}train.csv -n ${dataFolder}neighbors_out.csv -d ${dataFolder}distances_out.csv -k 10 -v
#cmake -B"cmake-build-debug/" .
cmake -H. -Bcmake-build-debug -DCMAKE_BUILD_TYPE=Debug &# cmake has some awkward command line args
cmake -H. -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release &

# testing tensorflow
echo -e "[ dataWrangler ] Testing tensorflow CPU output..."
python ./Misc/tensorFlowCPUDebug.py

wait
