#!/bin/bash
# if there are no cli arguments:
date
#dataFolder="scopeTest"
if [ $# -eq 0 ]; then
	# use defaults
	echo -e "[ dataWrangler ] No arguments, using defaults."
	dataFolder="../../DataSets/ml-20m/"
	isDebug=true
else
	echo -e "[ dataWrangler ] Arguments provided, setting."
	dataFolder=$1
fi

# template + testing template
python ./Misc/template.py

# debug
python ./Misc/debug.py

# data preparation
python ./Misc/movieLenseWrangler.py $dataFolder
python ./Misc/movieLenseDataCombiner.py $dataFolder
# args:  <data directory relative path> <input.csv name> <ratio of train:test> <output test file name> <output train fn>
python ./Misc/monteCarlo.py $dataFolder "pML.csv" 0.2 "test.csv" "train.csv"

# visualisations
figDir="Fig/"
mkdir -p $figDir
echo "[ dataWrangler ] Image directory: ${figDir}"
#python ./Misc/seabornScatter.py $dataFolder "test.csv" "rating" "timestamp" $figDir "crappyLines.png"

# baseline learning algorithms
python ./Misc/svd.py $dataFolder
python ./Misc/mf.py $dataFolder
python ./Misc/rnn.py $dataFolder
#python ./Misc/knn.py $dataFolder "test.csv" "train.csv" &
#echo -e "[ mlpack_knn cpp ] Avante! Show that sh-ython whos boss."
#mlpack_knn -q ${dataFolder}test_noLabel.csv -r ${dataFolder}train.csv -n ${dataFolder}neighbors_out.csv -d ${dataFolder}distances_out.csv -k 10 -v

#wait

# testing tensorflow
echo -e "[ dataWrangler ] Testing tensorflow CPU output..."
python ./Misc/tensorFlowCPUDebug.py
